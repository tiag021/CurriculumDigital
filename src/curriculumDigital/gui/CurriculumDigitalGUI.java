/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package curriculumDigital.gui;

import curriculumDigital.core.CurriculumDigital;
import curriculumDigital.core.Evento;
import curriculumDigital.core.Utilizador;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author almei
 */
public class CurriculumDigitalGUI extends javax.swing.JFrame {

    /**
     *
     */
    public static String fileCurriculumDigital = "curriculumDigital.obj";
    CurriculumDigital curriculum;
    Utilizador myUser = null;

    /**
     *
     */
    public CurriculumDigitalGUI() {
        initComponents();

        setSize(800, 600);
        setLocationRelativeTo(null);
    }

    /**
     *
     * @param u
     */
    public CurriculumDigitalGUI(Utilizador u) {
        this();
        this.myUser = u;
        jLabelNome.setText(u.getName());

        try {
            curriculum = new CurriculumDigital();
            curriculum = CurriculumDigital.load(fileCurriculumDigital);

            List<Evento> userEvents = new ArrayList<>();

            for (Evento evento : curriculum.getBlockchainEvents()) {
                if (evento.getUser().equals(myUser.getName())) {
                    userEvents.add(evento);
                }
            }

            if (!userEvents.isEmpty()) {
                StringBuilder eventsDetails = new StringBuilder();
                for (Evento evento : userEvents) {
                    eventsDetails.append(evento.toString()).append("\n");
                }
                txtCurriculum.setText(eventsDetails.toString());
            } else {
                txtCurriculum.setText("Nenhum evento encontrado para " + myUser.getName() + ".");
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Erro ao carregar o currículo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegistar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnListar = new javax.swing.JButton();
        btnCurriculo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCurriculum = new javax.swing.JTextArea();
        btnAcerca = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEventos = new javax.swing.JTextArea();
        jLabelNome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Curriculum Digital");

        btnRegistar.setText("Registar");
        btnRegistar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome:");

        btnListar.setText("Listar Pessoas");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnCurriculo.setText("Mostrar Currículo");
        btnCurriculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCurriculoActionPerformed(evt);
            }
        });

        jLabel2.setText("Eventos Curriculares");

        txtCurriculum.setEditable(false);
        txtCurriculum.setColumns(20);
        txtCurriculum.setRows(5);
        txtCurriculum.setFocusable(false);
        jScrollPane1.setViewportView(txtCurriculum);

        btnAcerca.setText("Acerca de...");
        btnAcerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcercaActionPerformed(evt);
            }
        });

        jLabel3.setText("Currículo");

        txtEventos.setColumns(20);
        txtEventos.setRows(5);
        jScrollPane2.setViewportView(txtEventos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAcerca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRegistar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnListar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCurriculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelNome)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelNome))
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegistar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCurriculo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAcerca, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Botão mostrar currículo
    private void btnCurriculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCurriculoActionPerformed
        try {
            List<Evento> userEvents = new ArrayList<>();

            for (Evento evento : curriculum.getBlockchainEvents()) {
                if (evento.getUser().equals(myUser.getName())) {
                    userEvents.add(evento);
                }
            }

            if (!userEvents.isEmpty()) {
                StringBuilder eventsDetails = new StringBuilder();
                for (Evento evento : userEvents) {
                    eventsDetails.append(evento.toString()).append("\n");
                }
                txtCurriculum.setText(eventsDetails.toString());
            } else {
                txtCurriculum.setText("Nenhum evento encontrado para " + myUser.getName() + ".");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar eventos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCurriculoActionPerformed

    // Botão Registar
    private void btnRegistarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistarActionPerformed
        try {
            String[] eventosArray = txtEventos.getText().split("\\n");

            // Verifica se os eventos são válidos
            if (eventosArray.length > 0) {
                String eventosConcatenados = String.join(", ", eventosArray);
                Evento evento = new Evento(eventosConcatenados, myUser);

                curriculum.addEvent(evento);
                curriculum.save(fileCurriculumDigital);

                JOptionPane.showMessageDialog(null, "Currículo registrado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, insira um nome e pelo menos um evento!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao registrar o currículo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegistarActionPerformed

    // Botão Listar
    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        try {
            List<Evento> eventos = curriculum.getBlockchainEvents();

            List<String> userNames = new ArrayList<>();

            // Extrair o userName a partir dos eventos
            for (Evento evento : eventos) {
                String nome = evento.getUser();
                // Prevenir duplicados
                if (!userNames.contains(nome)) { 
                    userNames.add(nome);
                }
            }

            String[] namesArray = userNames.toArray(new String[0]);

            // Mostrar os nomes num popup
            String selectedName = (String) JOptionPane.showInputDialog(
                    null,
                    "Selecione um utilizador:",
                    "Lista de Utilizadores",
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    namesArray,
                    namesArray[0] // Default selection
            );

            // Verifica se um userName foi selecionado
            if (selectedName != null) {
                // Obtenção dos eventos desse userName
                StringBuilder eventsDetails = new StringBuilder();
                for (Evento evento : eventos) {
                    if (evento.getUser().equals(selectedName)) {
                        eventsDetails.append(evento.toString()).append("\n");
                    }
                }

                if (eventsDetails.length() > 0) {
                    JOptionPane.showMessageDialog(this, eventsDetails.toString(),
                            "Eventos de " + selectedName, JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Nenhum evento encontrado para " + selectedName,
                            "Eventos", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(CurriculumDigitalGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnListarActionPerformed

    // Botão Acerca de
    private void btnAcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcercaActionPerformed
        JOptionPane.showMessageDialog(this,
                "Alunos do Grupo:\n- Tiago Fernandes, nº22102\n- Tiago Carvalho, nº23024",
                "Acerca de", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnAcercaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurriculumDigitalGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurriculumDigitalGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurriculumDigitalGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurriculumDigitalGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurriculumDigitalGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcerca;
    private javax.swing.JButton btnCurriculo;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnRegistar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtCurriculum;
    private javax.swing.JTextArea txtEventos;
    // End of variables declaration//GEN-END:variables
}
